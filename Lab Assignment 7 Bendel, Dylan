// Bendel, Dylan
// Lab Assignment 7
// COP 3502 Lab
// March 7th, 2024
#include <stdio.h>

void swap(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

void bubbleSort(int arr[], int size, int swapCount[]) {
    int totalSwaps = 0;
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                swap(&arr[j], &arr[j + 1]);
                swapCount[arr[j + 1]]++;
                totalSwaps++;
            }
        }
    }
    printf("Total # of swaps (Bubble Sort): %d\n", totalSwaps);
}

void selectionSort(int arr[], int size, int swapCount[]) {
    int i, j, min_idx, totalSwaps = 0;

    for (i = 0; i < size - 1; i++) {
        min_idx = i;
        for (j = i + 1; j < size; j++)
            if (arr[j] < arr[min_idx])
                min_idx = j;

        if (min_idx != i) {
            swap(&arr[min_idx], &arr[i]);
            swapCount[arr[i]]++;
            totalSwaps++;
        }
    }
    printf("Total # of swaps (Selection Sort): %d\n", totalSwaps);
}

void reset_swap_count(int swapCount[]) {
    for (int i = 0; i < 100; i++) {
        swapCount[i] = 0;
    }
}

void printSwaps(int arr[], int size, int swapCount[]) {
    for (int i = 0; i < size; i++) {
        printf("%d: # of times %d is swapped: %d\n", arr[i], arr[i], swapCount[arr[i]]);
    }
}

int main() {
    int array1[] = {97, 16, 45, 63, 13, 22, 7, 58, 72};
    int array2[] = {90, 80, 70, 60, 50, 40, 30, 20, 10};
    int size1 = sizeof(array1) / sizeof(array1[0]);
    int size2 = sizeof(array2) / sizeof(array2[0]);
    int swapCount[100]; 

    printf("Array1 Original:\n");
    printArray(array1, size1);

    reset_swap_count(swapCount);
    bubbleSort(array1, size1, swapCount);
    printSwaps(array1, size1, swapCount);

    printf("\nArray2 Original:\n");
    printArray(array2, size2);

    reset_swap_count(swapCount);
    bubbleSort(array2, size2, swapCount);
    printSwaps(array2, size2, swapCount);

    // Re-initialize arrays for Selection Sort (because they are sorted now)
    int array1_2[] = {97, 16, 45, 63, 13, 22, 7, 58, 72};
    int array2_2[] = {90, 80, 70, 60, 50, 40, 30, 20, 10};

    printf("\nArray1 Original for Selection Sort:\n");
    printArray(array1_2, size1);

    reset_swap_count(swapCount);
    selectionSort(array1_2, size1, swapCount);
    printSwaps(array1_2, size1, swapCount);

    printf("\nArray2 Original for Selection Sort:\n");
    printArray(array2_2, size2);

    reset_swap_count(swapCount);
    selectionSort(array2_2, size2, swapCount);
    printSwaps(array2_2, size2, swapCount);

    return 0;
}
